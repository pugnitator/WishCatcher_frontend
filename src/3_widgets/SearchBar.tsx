import { useRef, useState } from 'react';
import styled from 'styled-components';
import ImageButton from '../6_shared/ui/buttons/ImageButton';

interface SearchBarProps {
  onSearch: (arg: string) => void;
  onCancelSearch: () => void;
  placeholder?: string;
}

export default function SearchBar({
  onSearch,
  onCancelSearch,
  placeholder = 'Поиск...',
}: SearchBarProps) {
  const inputRef = useRef<HTMLInputElement>(null);
  const [value, setValue] = useState('');

  const handleSearch = () => {
    console.log('Начинаем поиск', value);
    if (value) {
      onSearch(value);
    }
  };

  const handleCancelSearch = () => {
    setValue('');
    onCancelSearch();
  };

  return (
    <StyledSearchBar>
      <SearchInput
        ref={inputRef}
        type="text"
        placeholder={placeholder}
        value={value}
        onChange={(e) => setValue(e.target.value)}
      />
      <ImageButton onClick={handleSearch}>
        <svg
          width="32"
          height="32"
          viewBox="0 0 32 32"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M2.93589 14.9668C2.92413 8.63794 8.04517 3.49786 14.3741 3.4861C20.703 3.47435 25.8431 8.59537 25.8548 14.9242C25.8606 18.0278 24.632 20.8455 22.6319 22.9128C22.5864 22.9452 22.543 22.9818 22.5022 23.0227C22.4615 23.0636 22.425 23.1072 22.3928 23.1528C20.333 25.1603 17.52 26.3991 14.4166 26.4049C8.08774 26.4166 2.94764 21.2956 2.93589 14.9668ZM23.1981 25.1276C20.8444 27.1642 17.777 28.3986 14.4204 28.4049C6.98691 28.4187 0.949696 22.4039 0.935889 14.9705C0.922082 7.53707 6.9369 1.49992 14.3704 1.48611C21.8038 1.4723 27.841 7.48707 27.8548 14.9205C27.8611 18.2774 26.6378 21.3495 24.6097 23.7108L30.7039 29.7823C31.0951 30.1721 31.0963 30.8053 30.7065 31.1965C30.3167 31.5878 29.6835 31.5889 29.2923 31.1992L23.1981 25.1276Z"
            fill="white"
          />
          <path
            d="M22.6319 22.9128L22.9217 23.3203C22.9467 23.3025 22.97 23.2825 22.9913 23.2605L22.6319 22.9128ZM22.5022 23.0227L22.148 22.6698L22.5022 23.0227ZM22.3928 23.1528L22.7418 23.5109C22.7637 23.4895 22.7837 23.4661 22.8013 23.4411L22.3928 23.1528ZM23.1981 25.1276L23.551 24.7734C23.3655 24.5886 23.0689 24.5782 22.8709 24.7495L23.1981 25.1276ZM24.6097 23.7108L24.2304 23.385C24.0598 23.5836 24.0713 23.8802 24.2568 24.065L24.6097 23.7108ZM30.7039 29.7823L31.0568 29.4281L30.7039 29.7823ZM30.7065 31.1965L31.0607 31.5494L31.0607 31.5494L30.7065 31.1965ZM29.2923 31.1992L28.9394 31.5534L28.9394 31.5534L29.2923 31.1992ZM14.3731 2.98611C7.76811 2.99837 2.42362 8.36272 2.43589 14.9677L3.43588 14.9658C3.42464 8.91316 8.32224 3.99735 14.375 3.9861L14.3731 2.98611ZM26.3548 14.9233C26.3426 8.31829 20.9782 2.97384 14.3731 2.98611L14.375 3.9861C20.4278 3.97486 25.3436 8.87244 25.3548 14.9251L26.3548 14.9233ZM22.9913 23.2605C25.0781 21.1035 26.3608 18.1621 26.3548 14.9233L25.3548 14.9251C25.3603 17.8935 24.1859 20.5876 22.2726 22.5651L22.9913 23.2605ZM22.8564 23.3756C22.8772 23.3548 22.8991 23.3364 22.9217 23.3203L22.3422 22.5053C22.2738 22.554 22.2088 22.6089 22.148 22.6698L22.8564 23.3756ZM22.8013 23.4411C22.8173 23.4184 22.8357 23.3965 22.8564 23.3756L22.148 22.6698C22.0873 22.7308 22.0327 22.7959 21.9843 22.8645L22.8013 23.4411ZM14.4176 26.9049C17.6562 26.8989 20.5926 25.6054 22.7418 23.5109L22.0438 22.7947C20.0734 24.7151 17.3839 25.8994 14.4157 25.9049L14.4176 26.9049ZM2.43589 14.9677C2.44815 21.5727 7.81253 26.9171 14.4176 26.9049L14.4157 25.9049C8.36295 25.9161 3.44713 21.0185 3.43588 14.9658L2.43589 14.9677ZM22.8709 24.7495C20.6044 26.7107 17.6518 27.8989 14.4194 27.9049L14.4213 28.9049C17.9023 28.8984 21.0844 27.6177 23.5252 25.5057L22.8709 24.7495ZM14.4194 27.9049C7.26212 27.9182 1.44918 22.1268 1.43589 14.9696L0.43589 14.9714C0.45021 22.681 6.7117 28.9192 14.4213 28.9049L14.4194 27.9049ZM1.43589 14.9696C1.42259 7.81229 7.21397 1.9994 14.3713 1.98611L14.3694 0.986109C6.65984 1.00043 0.421569 7.26186 0.43589 14.9714L1.43589 14.9696ZM14.3713 1.98611C21.5286 1.97281 27.3415 7.76415 27.3548 14.9214L28.3548 14.9196C28.3405 7.21 22.079 0.971789 14.3694 0.986109L14.3713 1.98611ZM27.3548 14.9214C27.3608 18.154 26.1834 21.1112 24.2304 23.385L24.989 24.0366C27.0923 21.5879 28.3613 18.4008 28.3548 14.9196L27.3548 14.9214ZM24.2568 24.065L30.351 30.1365L31.0568 29.4281L24.9626 23.3566L24.2568 24.065ZM30.351 30.1365C30.5466 30.3314 30.5472 30.648 30.3523 30.8436L31.0607 31.5494C31.6454 30.9625 31.6436 30.0128 31.0568 29.4281L30.351 30.1365ZM30.3523 30.8436C30.1574 31.0393 29.8408 31.0398 29.6452 30.8449L28.9394 31.5534C29.5263 32.1381 30.476 32.1363 31.0607 31.5494L30.3523 30.8436ZM29.6452 30.8449L23.551 24.7734L22.8452 25.4818L28.9394 31.5534L29.6452 30.8449Z"
            fill="white"
          />
        </svg>
      </ImageButton>
      <ImageButton onClick={handleCancelSearch}>
        <svg
          width="29"
          height="29"
          viewBox="0 0 30 31"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M1.87524 2.375L28.5786 28.7033"
            stroke="#C94E70"
            stroke-width="3"
            stroke-linecap="round"
            stroke-linejoin="round"
          />
          <path
            d="M28.5781 2.375L1.87476 28.7033"
            stroke="#C94E70"
            stroke-width="3"
            stroke-linecap="round"
            stroke-linejoin="round"
          />
        </svg>
      </ImageButton>
    </StyledSearchBar>
  );
}

const StyledSearchBar = styled.div`
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 10px;
  width: 100%;
  height: fit-content;

  padding: 0 10px 0 0;

  border: var(--border);
  border-radius: var(--border-radius-small);

  button {
    padding-inline: 5px;
    width: fit-content;
    height: fit-content;
  }
`;

const SearchInput = styled.input`
  display: inline-flex;
  height: 40px;

  flex-grow: 1;

  background-color: transparent;
  border: none;

  &:focus {
    border: none;
    outline: none;
  }

  &::placeholder {
    color: var(--color-light);
  }
`;
